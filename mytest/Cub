DATABASE ../database/phreeqc.dat
SELECTED_OUTPUT 101
    -file                 Cub_101.sel
USER_PUNCH 101
    -headings Mu SC
    -start
10 PUNCH STR_F$(MU, 20, 12)
20 PUNCH STR_F$(SC, 20, 10)
    -end
# Sr Durchdiff generisch, am Bsp 1003_2.CAT 17G
# Cdsb = 0
# CEC = 0.195 eq/kg
#

SOLUTION_MASTER_SPECIES
# element   species   alk gfw_formula element_gfw
  # Cs        Cs+       0.0  132.905   132.905
  # Cs_tr        Cs_tr+       0.0  132.905   132.905
  Hto       Hto       0.0     1       1

SOLUTION_SPECIES
# Cs+ = Cs+;        log_k 0  ;  -dw 2.07e-9; -erm_ddl 2.1 # geändert
# Cs_tr+ = Cs_tr+;        log_k 0  ;  -dw 2.07e-9; -erm_ddl 2.1 # geändert
Hto = Hto;        -gamma 1e6 0;     -dw 2.236e-9
Sr+2 = Sr+2;	-gamma	5.260	0.121;	-dw	 0.794e-9 ; erm_ddl 0.29 # 0.29
# Sr+2 = Sr+2;	-gamma	5.260	0.121;	-dw	 0.794e-9


SURFACE_MASTER_SPECIES
 # Su_fes Su_fes-      # Frayed Edge Sites
 # Su_ii Su_ii-        # Type II sites of intermediate strength
 Asu_ Asu_-            # Double layer, planar sites are modeled with EXCHANGE
SURFACE_SPECIES
Asu_- = Asu_-; log_k 0.0000000e+00
H+ + Asu_- = HAsu_; log_k -0.8
Na+ + Asu_- = NaAsu_; log_k -0.7# alle folgenden Kationen an Austauschverhaeltnisse beim X-Modell angepasst
# K+ + Asu_- = KAsu_; log_k 0.654
# Cs+ + Asu_- = CsAsu_; log_k 1.1656
# Mg+2 + 2Asu_- = MgAsu_2; log_k 0.107
# Ca+2 + 2Asu_- = CaAsu_2; log_k 0.104
# Al+3 + 3Asu_- = AlAsu_3; log_k -2 # keine U
Sr+2 + 2Asu_- = SrAsu_2; log_k 0.31
# Sr+2 + 2Asu_- = SrAsu_2; log_k 0.21

# Su_fes- = Su_fes-; log_k 0
# Na+ + Su_fes- = NaSu_fes; log_k 10
# K+ + Su_fes- = KSu_fes; log_k 12.4 # B&B J. Contam. Hydrol. 2000
# Cs+ + Su_fes- = CsSu_fes; log_k 17.0 # B&B J. Contam. Hydrol. 2000

# Su_ii- = Su_ii-; log_k 0
# Na+ + Su_ii- = NaSu_ii; log_k 10
# K+ + Su_ii- = KSu_ii; log_k 12.1
# Cs+ + Su_ii- = CsSu_ii; log_k 13.6

KNOBS; -tol 1e-20

SOLUTION 0-2 dummy column with 1 cell, calc`s are done with stagnant cells 3 to ...
  Na 1; Cl 1
END

SOLUTION 3
-water 0.996 # source reservoir volume / L
Na 100; Cl 100 charge; pH 6.8
Sr 2.0560e-4  # factor 1
# Li 1e-3
SELECTED_OUTPUT
  -file Cub_Sr_dd_dsb0.prn; -reset false
USER_PUNCH
       # Define symbols that facilitate printing...
1    nl$ = CHR$(10) # newline
2    q$  = CHR$(34) # quote '"'
3    x$  = CHR$(35) # cross '#'
4    sc$ = CHR$(59) # semicolon ';'
5    pi  = 2 * ARCTAN(1e10)    # 3.14159...

     # Define experimental parameters...
10   V_end = 0.1       # volume of the first sample of tracer-out solution / L
12   d_clay = 20e-3       # diameter clay / m
20   A = pi * (d_clay/2)^2   # filter and sample cross section area / m2
# 30   h_filter1 = 110e-6 # tracer-in filter thickness / m
35   h_filter1 = 5e-3 # tracer-in filter thickness / m; Faktor Dicke = 3.125, eig 1.60mm
40   h_filter2 = 5e-3 # tracer-out filter thickness / m
50   por_filter1 = 0.285    # porosity
60   por_filter2 = 0.285
62   tort_f1 = 2.4145 # tortuosity fil1; Faktor Dicke = 3.125
65   tort_f2 = 2.4145 # tortuosity fil2; Faktor Dicke = 3.125
70   G_filter1 = por_filter1^tort_f1          # geometrical factor, G
80   G_filter2 = por_filter2^tort_f2
90   h_clay = 10.0e-3     # clay thickness / m
100  por_clay = 0.390
# 104  CEC = 0.16  # eq/kg
105  CEC = 0.195e-0  # eq/kg
# 106  SC_ii = 4e-2  # eq/kg type II
# 108  SC_fes = 5e-4 # eq/kg FES
114  A_ext = 100 # m2/g
116  rho_b = 2.80 * (1 - por_clay)  # clay bulk density  / (kg/L)
118  rho_b_eps = 2.80 * (1 - por_clay) / por_clay  # clay bulk density / porosity / (kg/L)
120  CEC_V = CEC * rho_b_eps   # CEC / (eq/L porewater)
# 125  SC_ii_V = SC_ii * rho_b_eps # strong sites / (eq/L porewater)
# 126  SC_fes_V = SC_fes * rho_b_eps # weak a sites / (eq/L porewater)
130  A_por = A_ext * 1000 * rho_b_eps  # pore surface area / (m2/L porewater)
140  pore_r = 2e-3 / A_por # pore radius / m
150  n_DB = 2              # extent of the Donnan layer / (Debye lengths)
160  f_free_lim = 0.01     # smallest fraction of 'free' porewater

     # calculate fractions of free and Donnan porewater for a circular pore...
170  Far = 96493.5 : R = 8.3147 : ee = 8.854e-12 * eps_r # Faraday constant C/eq, gas constant J/K/mol, dielectric perimittivity F/m
175  appak = sqrt(ee * R * TK / (2 * mu * 1e3)) / Far # Debye length / m
180  n_DB = 2
182  d_DL = 2 * appak
184 r_lim = 0.01     # smallest radius fraction of 'free' porewater
# 200 d_closest = 2e-10 # the closest an ion can come to the surface, m
185 d_closest = 0e-10 # the closest an ion can come to the surface, m

   # define pore geometry
190 pore_geom$ = 'circ'  # 'circ' for circular, 'plan' for planar
191  if pore_geom$ = 'circ' then goto 198
192    # for planar pore
193    f_void = 2 * d_closest / pore_r
194    if (1 - 2 * (d_DL + d_closest) / pore_r) <= r_lim^2 then f_free = r_lim^2 : d_DL = (pore_r * (1 - r_lim) - 2*d_closest) / 2 \
       else f_free = 1 - 2 * (d_DL + d_closest) / pore_r
195    f_DL = 1 - f_free - f_void
196  goto 250
197    # for circular pore
198    f_void = (2 * pore_r * d_closest - d_closest^2) / pore_r^2   # goto 198
199    if d_DL + d_closest > pore_r * (1 - r_lim) then f_free = r_lim^2 else f_free = (pore_r - d_DL - d_closest)^2 / pore_r^2
200    d_DL = 1e-3 * (1 - f_free - f_void) / A_por
201    f_DL = 1 - f_free - f_void

250  if CEC = 0 THEN f_free = 1   # goto 250
251  print 'por_clay =', por_clay, 'rho_b /(g/ml) =', rho_b, 'ISt /M =', mu
255  if pore_geom$ = 'circ' then print 'pore geometry = circular' else print 'pore geometry = planar'
260  print 'A_ext /(m2/g) =', A_ext,  'A_por /(m2/L pore water) =', A_por
265  print 'f_DL =', f_DL, 'f_free =', f_free, 'f_tot =' f_DL + f_free, 'd_DL =', d_DL
270  print 'pore_r /nm =', pore_r * 1e9
275  print 'C/m2 = ', CEC_1 / A_por * Far, 'appak =', appak
276  print 'G_clay =', por_clay^tort_n

     # Define model parameters...
300  Dw = 7.94e-10              # default tracer diffusion coefficient / (m2/s)
305  nfilt1 = 1 #3               # number of cells in filter 1
310  nfilt2 = 1 #3              # number of cells in filter 2
315  nclay =  6 #12            # number of clay cells
320  exp_time = 60 * 86400e-0       # seconds
# 325  exp_time = 3 * 24 * 3600       # seconds
330  punch_time = 0.6 * 86400e-0 # punch time / seconds
335  sub_time_step = 3 #5      # subdivides the timestep, INCREASE IT when MCD reports negative conc's
340  tort_n = -1.5638           # aus De(HTO)= 2.0e-10 m^2/s (in separatem Experiment gemessen)
345  G_clay = por_clay^tort_n # geometrical factor


       # Write solutions for the cells...
# 444  Ltot = h_clay + h_filter1 + h_filter2
400  sol$ = nl$ + ' Na 100' + sc$ + ' Cl 100 charge'  +  sc$ + ' pH 6.8 '

410  punch nl$ + 'PRINT ' + sc$ + ' -reset false' + sc$ + ' -echo_input true' + sc$ + ' -user_print true'
415  IF nfilt1 = 0 THEN GOTO 460
420  xf1 = h_filter1 / nfilt1 : V_filt1 = A * xf1 * por_filter1 * 1e3
425  punch nl$ + x$ + ' tracer-in filter cells...'
430  FOR i = 1 TO nfilt1
435    num$ = TRIM(STR$(i + 3)) + sc$
440    punch nl$ + 'SOLUTION ' + num$ + ' -water ' + STR$(V_filt1)
445    punch sol$ + nl$
450  NEXT i

460  punch nl$ + nl$ + x$ + ' cells in clay sample...'# goto 460
465  x = h_clay / nclay
470  V_water = A * x * por_clay * 1e3
485  su_sites = CEC_V * V_water
# 490  ii_sites = SC_ii_V * V_water
# 491  fes_sites = SC_fes_V * V_water
495  FOR i = 1 TO nclay
500    num$ = TRIM(STR$(i + 3 + nfilt1)) + sc$
505    punch nl$ + 'SOLUTION ' + num$ + ' -water ' + TRIM(STR$(V_water * f_free))
510    punch sol$

520    if su_sites = 0 then goto 560
525      punch nl$ + 'SURFACE ' + num$ + ' -equil ' + num$
530      punch nl$ + ' Asu_ ' + TRIM(STR$(su_sites)) + ' ' + TRIM(STR$(A_por)) + ' ' + TRIM(STR$(V_water))
# 535      punch nl$ + ' Su_ii ' + TRIM(STR$(ii_sites)) + ' ' + TRIM(STR$(A_por/100))  + ' ' + TRIM(STR$(V_water))
# 536      punch nl$ + ' Su_fes ' + TRIM(STR$(fes_sites)) + ' ' + TRIM(STR$(A_por/100)) + ' ' + TRIM(STR$(V_water))
540      punch nl$ + ' -Donnan ' + TRIM(STR$(d_DL))
# 545      punch nl$ + 'no_edl'
550      punch nl$
560  NEXT i # note GOTO 560

590  IF nfilt2 = 0 THEN GOTO 640
595  xf2 = h_filter2 / nfilt2 : V_filt2 = A * xf2 * por_filter2 * 1e3
600  punch nl$ + nl$ + x$ + ' tracer-out filter cells...'
605  FOR i = 1 TO nfilt2
610    num$ = TRIM(STR$(i + 3 + nfilt1 + nclay)) + sc$
615    punch nl$ + 'SOLUTION ' + num$ + ' -water ' + STR$(V_filt2)
620    punch sol$ + nl$
625  NEXT i

640 punch nl$ + x$ + 'downstream solution...'# goto 640
645 num$ = TRIM(STR$(4 + nfilt1 + nclay + nfilt2)) + sc$
650 punch nl$ + 'SOLUTION ' + num$ + ' -water ' + STR$(V_end)
655 punch sol$
660 punch nl$ + 'END'


700 punch nl$ + 'PHASES '
710 punch nl$ + 'A_Sr'
720 punch nl$ + 'SrCl2 = Sr+2 + 2 Cl-' + sc$ + '-log_k -17'
722 punch nl$ + 'A_Li'
724 punch nl$ + 'LiCl = Li+ + Cl-' + sc$ + '-log_k -16'
730 punch nl$ + 'EQUILIBRIUM_PHASES ' + num$ + 'A_Sr 0 0' + sc$ + 'A_Li 0 0'
740 punch nl$ + 'END'

     # Define mixing factors for the diffusive flux between cells 1 AND 2:
     #    J_12 = -2 * Dw / (x_1 / g_1 + x_2 / g_2) * (c_2 - c_1)
     # Multiply with dt * A / (V = 1e-3 m3).  (Actual volumes are given with SOLUTION; -water)
     # Use harmonic mean: g_1 = por_1 / G_1, g_2 = por_2 / G_2, x_1 = Delta(x_1), etc.
800 IF nfilt1 > 0 THEN gf1 = por_filter1 / G_filter1
805 IF nfilt2 > 0 THEN gf2 = por_filter2 / G_filter2
810 g = por_clay / G_clay
# 810 G_clay = (por_clay - por_il)^tort_n
# 815 g = (por_clay - por_il) / G_clay
     # Find max time step = 0.5 * dx * V_water * G_factor / (Dw * por * A * fbc)
     #            V_water = por * A * dx...
     # At the inlet of the tracers, fbc = 2...
820 IF nfilt1 > 0 THEN ff = SQR(xf1) * G_filter1 / 2 ELSE ff = SQR(x) * G_clay / 2
     # Or at the filter-clay transition, fbc = 1...
830 IF nfilt1 > 0 THEN ff1 = (xf1 / gf1 + x / g) / (2 * A) * V_water * 1e-3
840 IF nfilt1 > 0 AND ff1 < ff THEN ff = ff1
     # Perhaps the clay has very small cells...
850 IF nfilt1 > 0 THEN ff1 = (x / g) / A * V_water * 1e-3
855 IF nfilt1 > 0 AND ff1 < ff THEN ff = ff1
860 IF nfilt2 > 0 THEN ff1 = SQR(xf2) * G_filter2 / 2
865 IF nfilt2 > 0 AND ff1 < ff THEN ff = ff1
870 dt_max = 0.5 * ff / Dw
     # Check with punch times, set shifts...
875 IF punch_time < dt_max THEN dt = punch_time ELSE dt = dt_max
880 punch_fr = 1
885 IF dt < punch_time THEN punch_fr = ceil(punch_time / dt)
890 dt = punch_time / punch_fr
895 shifts = ceil(exp_time / dt)
900 print 'dt= ', dt
905 print 'dt_max =', dt_max

     # Write mixing factors...
1000 punch nl$ + nl$ + x$ + ' mixing factors...'
# 1001 punch nl$ + 'MIX 0' + sc$ + ' 3 0'
# 1002 punch nl$ + 'MIX 1' + sc$ + ' 3 0'
# 1003 punch nl$ + 'MIX 2' + sc$ + ' 3 0'
1005 FOR i = 0 TO nfilt1 + nclay + nfilt2
# 1010   fbc = 1
1010   IF i = 0 OR i = nfilt1 + nclay + nfilt2 THEN fbc = 2 ELSE fbc = 1
1015   IF i > nfilt1 OR nfilt1 = 0 THEN GOTO 1035
1020     IF i < nfilt1 THEN mixf = Dw * fbc / (xf1 / gf1) * dt * A * 1e3
1025     IF i = nfilt1 THEN mixf = 2 * Dw * fbc / (xf1 / gf1 + x / g) * dt * A * 1e3
1030     GOTO 1065
1035   IF i > nfilt1 + nclay THEN GOTO 1055  # note GOTO 1035
1040     IF i <= nfilt1 + nclay THEN mixf = Dw * fbc / (x / g) * dt * A * 1e3
1045     IF i = nfilt1 + nclay AND nfilt2 > 0 THEN mixf = 2 * Dw * fbc / (xf2 / gf2 + x / g) * dt * A * 1e3
1050     GOTO 1065
1055   mixf = Dw * fbc / (xf2 / gf2) * dt * A * 1e3  # note GOTO 1055
1060
1065   punch nl$ + 'MIX ' + TRIM(STR$(i + 3)) + sc$ + STR$(i + 4) + STR$(mixf)  # note GOTO 1065
1070 NEXT i
1075 punch nl$ + 'USE MIX none'
1080 punch nl$ + 'END'

      # Write TRANSPORT...
1400 punch nl$ + 'TRANSPORT'
1410 stag = 2 + nfilt1 + nclay + nfilt2
1420 punch nl$ + ' -warnings false'
1430 punch nl$ + ' -shifts ' + TRIM(STR$(shifts))
1440 punch nl$ + ' -flow diff' + sc$ + ' -cells 1' + sc$ + ' -bcon 2 2' + sc$ + ' -stag ' + TRIM(STR$(stag))
1450 punch nl$ + ' -time ' + TRIM(STR$(dt)) + ' ' + TRIM(STR$(sub_time_step))
1460 punch nl$ + ' -multi_D true ' + STR$(Dw) + STR$(por_clay) + ' 0.0 ' + TRIM(STR$(-tort_n))
1480 punch nl$ + ' -punch_fr ' + TRIM(STR$(punch_fr)) + sc$ + ' -punch_c 3 ' + TRIM(STR$(2 + stag))
# 1490 punch nl$ + ' -print_fr ' + TRIM(STR$(punch_fr)) + sc$ + ' -print_c 3 4'# + TRIM(STR$(4 + get(101)))
1492 punch nl$ + 'END'

1800 totcell = 2 + stag
1810 put(totcell, 9)
END

USER_GRAPH 1 Source reservoir
 -plot_csv_file Cub_Sr.txt
 -plot_csv_file Cub_export.txt
 # -axis_scale sy_axis 490 510
 # -headings Cdsb0
 -axis_titles "Time / days" "Sr / (mol/m^3)"
 -chart_title "1.7G, Source reservoir"
 -plot_concentration_vs time
 1 if cell_no > 3 then end
 10 days = total_time / (3600 * 24)
 30 plot_xy days, tot("Sr") / 1  * 1000, color = Red, symbol = None
 -end


USER_GRAPH 2 downstream reservoir
 -plot_csv_file Cub_JdsbSr.txt
 -plot_csv_file Cub_Jdsb_export.txt
 -axis_titles "Time / days" "flux / (mol/m2/s)"
 -axis_scale y_axis 0 a
 -start
 10 if (cell_no <  get(9) ) then end
 20 days = total_time / (3600 * 24)
 30 dif = sys("Sr") / 1  - get(1)
 40 if dif < 0 then 60
 50 plot_xy days, (dif / (3.1416 * 1.00^2) / (total_time - get(2)) * 24 * 3600) / 8.64, y_axis = 1, color = Green  , symbol = None
 60 put(sys("Sr") / 1 , 1) : put(total_time , 2)
 -end

END

PRINT
 -selected_out false
INCLUDE$ Cub_Sr_dd_dsb0.prn
END
